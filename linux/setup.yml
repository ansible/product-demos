---
user_message:
  - Update the 'activation_key' and 'org_id' extra variables for 'LINUX / Register with Insights'. https://access.redhat.com/management/activation_keys
  - Update Credential for Insights Inventory with Red Hat account.
  - Add variables for system_roles. https://console.redhat.com/ansible/automation-hub/repo/published/redhat/rhel_system_roles
controller_components:
  - projects
  - credential_types
  - credentials
  - inventory_sources
  - job_templates

controller_credential_types:
  - name: Insights Collection
    kind: cloud
    inputs:
      fields:
        - id: insights_user
          type: string
          label: Insights User
        - id: insights_password
          type: string
          label: Insights Password
          secret: true
    injectors:
      env:
        INSIGHTS_USER: "{% raw %}{  { insights_user  }}{% endraw %}"
        INSIGHTS_PASSWORD: "{% raw %}{  { insights_password  }}{% endraw %}"

controller_credentials:
  - name: Insights Inventory
    credential_type: Insights Collection
    organization: Default
    inputs:
      insights_user: REPLACEME
      insights_password: REPLACEME

controller_inventory_sources:
  - name: Insights Inventory
    inventory: Demo Inventory
    source: scm
    source_project: Ansible official demo project
    source_path: linux/inventory.insights.yml
    credential: Insights Inventory

controller_templates:
  - name: "LINUX / Register with Insights"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/ec2_register.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    survey_enabled: true
    extra_vars:
      activation_key: !unsafe "RHEL{{ ansible_distribution_major_version }}_{{ env }}"
      org_id: REPLACEME
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Choose Environment
          type: multiplechoice
          variable: env
          choices:
            - Dev
            - QA
            - Prod
          required: true
        - question_name: Ansible Inventory Group (and Insights tag) to be created
          type: text
          variable: insights_tag
          required: true
        - question_name: Org ID
          type: text
          variable: org_id
          required: true

  - name: "LINUX / Troubleshoot"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/tshoot.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    use_fact_cache: true
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true

  - name: "LINUX / Temporary Sudo"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/temp_sudo.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: User Name
          type: text
          variable: sudo_user
          required: true
        - question_name: How long to grant access in minutes
          type: integer
          variable: sudo_time
          default: 10
          required: true

  - name: "LINUX / Patching"
    job_type: check
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/patching.yml"
    execution_environment: Default execution environment
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    use_fact_cache: true
    ask_job_type_on_launch: true
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true

  - name: "LINUX / Start Service"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/service_start.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    use_fact_cache: true
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Service Name
          type: text
          variable: service_name
          required: true

  - name: "LINUX / Stop Service"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/service_stop.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    use_fact_cache: true
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Service Name
          type: text
          variable: service_name
          required: true

  - name: "LINUX / Run Shell Script"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/run_script.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Shell Script
          type: textarea
          variable: shell_script
          required: true

  - name: "LINUX / Fact Scan"
    project: "Ansible official demo project"
    playbook: linux/fact_scan.yml
    inventory: Demo Inventory
    execution_environment: Default execution environment
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    use_fact_cache: true
    credentials:
      - Demo Credential
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true

  - name: "LINUX / Podman Webserver"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/podman.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Web Page Message
          type: textarea
          variable: message
          required: true
          default: "This is Apache webserver running in a container with podman"

  - name: "LINUX / System Roles"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/system_roles.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    diff_mode: true
    ask_job_type_on_launch: true
    extra_vars:
      system_roles:
        - selinux
      selinux_policy: targeted
      selinux_state: enforcing
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true

  - name: "LINUX / Install Web Console (cockpit)"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/system_roles.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    diff_mode: true
    ask_job_type_on_launch: true
    extra_vars:
      system_roles:
        - cockpit
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Cockpit package load
          type: multiplechoice
          variable: cockpit_packages
          default: minimal
          choices:
            - default
            - minimal
            - full
          required: true

  - name: "LINUX / DISA STIG"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/compliance.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    extra_vars:
      sudo_remove_nopasswd: false
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true

  - name: "LINUX / Multi-profile Compliance"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/compliance-enforce.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    extra_vars:
      # used by CIS profile role
      sudo_require_authentication: false
      # used by STIG profile role
      sudo_remove_nopasswd: false
      sudo_remove_no_authenticate: false
      # used by CIS and STIG profile role
      accounts_password_set_max_life_existing: false
      # used by the CJIS profile role
      service_firewalld_enabled: false
      firewalld_sshd_port_enabled: false
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Compliance Profile
          type: multiplechoice
          variable: compliance_profile
          required: true
          choices:
            - cis
            - cjis
            - cui
            - hipaa
            - ospp
            - pci_dss
            - stig

  - name: "LINUX / Multi-profile Compliance Report"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/compliance-report.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Compliance Profile
          type: multiplechoice
          variable: compliance_profile
          required: true
          choices:
            - cis
            - cjis
            - cui
            - hipaa
            - ospp
            - pci_dss
            - stig
        - question_name: Use httpd on the target host(s) to access reports locally?
          type: multiplechoice
          variable: use_httpd
          required: true
          choices:
            - "true"
            - "false"
          default: "true"

  - name: "LINUX / Insights Compliance Scan"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/insights_compliance_scan.yml"
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Have you associated a compliance profile in the Insights Console for all hosts to be scanned?  If not, then the scan will fail.
          type: multiplechoice
          variable: compliance_profile_configured
          required: true
          choices:
            - "Yes"
            - "No"
          default: "No"

  - name: "LINUX / Deploy Application"
    job_type: run
    inventory: "Demo Inventory"
    project: "Ansible official demo project"
    playbook: "linux/deploy_application.yml"
    notification_templates_started: Telemetry
    notification_templates_success: Telemetry
    notification_templates_error: Telemetry
    use_fact_cache: true
    credentials:
      - "Demo Credential"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Server Name or Pattern
          type: text
          variable: _hosts
          required: true
        - question_name: Application Package Name
          type: text
          variable: application
          required: true

...
